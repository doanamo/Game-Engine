#
# Copyright (c) 2018-2021 Piotr Doan. All rights reserved.
# Software distributed under the permissive MIT License.
#

cmake_minimum_required(VERSION 3.21)

#
# Project
#

project(GameEngine)

#
# Configurations
#

# Define custom set of configurations.
set(CMAKE_CONFIGURATION_TYPES "Debug;Develop;Release" CACHE STRING "" FORCE)

# Make Release same as removed RelWithDebInfo configuration.
set(CMAKE_ASM_FLAGS_RELEASE ${CMAKE_ASM_FLAGS_RELWITHDEBINFO})
set(CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELWITHDEBINFO})
set(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
set(CMAKE_RC_FLAGS_RELEASE ${CMAKE_RC_FLAGS_RELWITHDEBINFO})
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE ${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO})
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE ${CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO})
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE ${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO})
set(CMAKE_EXE_LINKER_FLAGS_RELEASE ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO})

# Make Develop behave like regular Release configuration.
set(CMAKE_ASM_FLAGS_DEVELOP ${CMAKE_ASM_FLAGS_RELEASE})
set(CMAKE_C_FLAGS_DEVELOP ${CMAKE_C_FLAGS_RELEASE})
set(CMAKE_CXX_FLAGS_DEVELOP ${CMAKE_CXX_FLAGS_RELEASE})
set(CMAKE_RC_FLAGS_DEVELOP ${CMAKE_RC_FLAGS_RELEASE})
set(CMAKE_MODULE_LINKER_FLAGS_DEVELOP ${CMAKE_MODULE_LINKER_FLAGS_RELEASE})
set(CMAKE_STATIC_LINKER_FLAGS_DEVELOP ${CMAKE_STATIC_LINKER_FLAGS_RELEASE})
set(CMAKE_SHARED_LINKER_FLAGS_DEVELOP ${CMAKE_SHARED_LINKER_FLAGS_RELEASE})
set(CMAKE_EXE_LINKER_FLAGS_DEVELOP ${CMAKE_EXE_LINKER_FLAGS_RELEASE})

# Add global defines for identifying each configuration from code.
add_compile_definitions(
    $<$<CONFIG:Debug>:BUILD_DEBUG>
    $<$<CONFIG:Develop>:BUILD_DEVELOP>
    $<$<CONFIG:Release>:BUILD_RELEASE>
)

# Disable RTTI and exceptions.
if(MSVC)
    string(REGEX REPLACE "/GR" "/GR-" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    string(REGEX REPLACE "/EHsc" "/EHs-c-" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    add_definitions("-D_HAS_EXCEPTIONS=0")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-rtti -fno-exceptions")
endif()

#
# Sources
#

add_subdirectory("Source")
add_subdirectory("Example")
add_subdirectory("Tests")
